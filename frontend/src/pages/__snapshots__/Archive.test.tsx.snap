// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Archive renders archived runs 1`] = `
<div>
  <div
    className="flex"
  >
    <WithStyles(WithFormControlContext(FormControlLabel))
      checked={true}
      control={
        <WithStyles(Radio)
          color="primary"
        />
      }
      id="viewArchivedRuns"
      label="Runs"
      onChange={[Function]}
    />
    <WithStyles(WithFormControlContext(FormControlLabel))
      checked={false}
      control={
        <WithStyles(Radio)
          color="primary"
        />
      }
      id="viewArchivedExperiments"
      label="Experiments"
      onChange={[Function]}
    />
  </div>
  <div
    className="page"
  >
    <RunList
      history={
        Object {
          "push": [MockFunction],
        }
      }
      location={Object {}}
      match={Object {}}
      onError={[Function]}
      onSelectionChange={[Function]}
      selectedIds={Array []}
      storageState="STORAGESTATE_ARCHIVED"
      toolbarProps={
        Object {
          "actions": Object {
            "deleteRun": Object {
              "action": [Function],
              "disabled": true,
              "disabledTitle": "Select at least one run to delete",
              "id": "deleteBtn",
              "title": "Delete",
              "tooltip": "Delete",
            },
            "refresh": Object {
              "action": [Function],
              "id": "refreshBtn",
              "title": "Refresh",
              "tooltip": "Refresh the list",
            },
            "restore": Object {
              "action": [Function],
              "disabled": true,
              "disabledTitle": "Select at least one resource to restore",
              "id": "restoreBtn",
              "title": "Restore",
              "tooltip": "Restore",
            },
          },
          "breadcrumbs": Array [],
          "pageTitle": "Archive",
        }
      }
      updateBanner={[MockFunction]}
      updateDialog={[MockFunction]}
      updateSnackbar={[MockFunction]}
      updateToolbar={[MockFunction]}
    />
  </div>
</div>
`;
