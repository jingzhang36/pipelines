steps:
- name: gcr.io/cloud-builders/gsutil
  # TODO relative path to local file?
  args: ['cp', '-r', '${_CODE_PATH}/preprocess', 'gs://$REPO_NAME/$COMMIT_SHA/preprocess']
  id: 'UploadPreprocessCode'
- name: 'python:2-alpine'
  entrypoint: '/bin/sh'
  args: ['-c', 'cd ${_CODE_PATH}/train; python setup.py sdist; cp dist/*.tar.gz /workspace/train.tar.gz']
  id:   'PackageTrainingCode'
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '/workspace/train.tar.gz', 'gs://$REPO_NAME/$COMMIT_SHA/train/train.tar.gz']
  id:   'UploadTrainingCode'
  waitFor: ['PackageTrainingCode']
- name: 'python:3.6-slim'
  entrypoint: '/bin/sh'
  args: ['-c', 'cd ${_CODE_PATH};
                pip3 install https://storage.googleapis.com/kfpci/kfp-0.1.22.tar.gz;
                python resnet-train-pipeline.py --package_base_dir gs://$REPO_NAME/$COMMIT_SHA;
                cp resnet-train-pipeline.py.zip /workspace/resnet-train-pipeline.zip']
  id:   'PackagePipeline'
- name: 'gcr.io/cloud-builders/gsutil'
  args: ['cp', '/workspace/resnet-train-pipeline.zip', 'gs://$REPO_NAME/$COMMIT_SHA/resnet-train-pipeline.zip']
  id:   'UploadPipeline'
  waitFor: ['PackagePipeline']
- name: gcr.io/ml-pipeline-dogfood/kfptool
  entrypoint: '/bin/sh'
  args: ['-c', '/builder/kubectl.bash; 
                python3 -c "import kfp; client=kfp.Client(namespace=\"$_NAMESPACE\"); client.create_pipeline_version(pipeline_id=\"$_PIPELINE_ID\", name=\"$COMMIT_SHA\", repo_name=\"$REPO_NAME\", commit_sha=\"$COMMIT_SHA\", url=\"https://storage.googleapis.com/$REPO_NAME/$COMMIT_SHA/resnet-train-pipeline.zip\")"']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=kfci'
  id:   'CreatePipelineVersion'
- name: gcr.io/ml-pipeline-dogfood/kfptool
  entrypoint: '/bin/sh'
  args: ['-c', '/builder/kubectl.bash; 
                python3 -c "import kfp; client=kfp.Client(namespace=\"$_NAMESPACE\"); exp = client.create_experiment(name=\"$_EXPERIMENT_NAME\"); params = {\"output\": \"gs://kfpci-resnet\", \"project-id\": \"$PROJECT_ID\"}; client.run_pipeline(exp.id, \"$COMMIT_SHA\", \"/workspace/resnet-train-pipeline.zip\", params)"']
  env:
  - 'CLOUDSDK_COMPUTE_REGION=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=kfci'
  id:   'RunPipeline'

substitutions:
  _CODE_PATH: /workspace/experiment/ci/resnet-cmle
  _NAMESPACE: kubeflow
  _PIPELINE_ID: 6a1d8e88-8c0a-4be7-babc-8a15df2cee10
  _EXPERIMENT_NAME: kfpcd
